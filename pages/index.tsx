import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import styles from "../styles/Home.module.css";
import PrefCheckBox from "../components/PrefCheckBox";
import { getPrefectures } from "./api/prefectures";
import type { PrefectureData } from "./api/prefectures";
import type { CompositionData } from "./api/composition/[prefCode]";
import { useEffect, useState } from "react";
import dynamic from "next/dynamic";
import type {
  PopulationChartData,
  PopulationOfPref,
  Line,
  Point,
} from "../components/PopulationChart";
import { NextApiRequest, NextApiResponse } from "next";
type Props = {
  prefs: PrefectureData;
};

const PopulationChart = dynamic(import("../components/PopulationChart"), {
  ssr: false,
});

export async function getServerSideProps() {
  const prefs = await getPrefectures();
  return { props: { prefs } };
}

export default function Home(data: Props) {
  const [populationData, setPopulationData] = useState<PopulationChartData>([]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{" "}
          <code className={styles.code}>pages/index.js</code>
        </p>

        <div className={styles.grid}>
          {data.prefs.result.map((n) => {
            return (
              <PrefCheckBox
                key={n.prefCode.toString()}
                name={n.prefName}
                code={n.prefCode}
                onChange={(c) => {
                  if (!populationData.find((p) => p.code === c)) {
                    const fetchPopulation = async (n: number) => {
                      const res = await fetch(`/api/composition/${n}`);
                      const d = (await res.json()) as CompositionData;
                      const l: Line = d.result.data
                        .find((d) => d.label === "総人口")
                        .data.map((d) => {
                          return { year: d.year, value: d.value };
                        });
                      setPopulationData(
                        populationData.concat({
                          code: n,
                          name: data.prefs.result.find((p) => p.prefCode == n)
                            .prefName,
                          line: l,
                        })
                      );
                    };
                    fetchPopulation(c);
                  } else {
                    setPopulationData(
                      populationData.filter((p) => p.code != c)
                    );
                  }
                }}
              ></PrefCheckBox>
            );
          })}
        </div>
        <PopulationChart data={populationData} />
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}
